/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import * as THREE from 'three'
import React, { useRef, useMemo } from 'react'
import { useGLTF } from '@react-three/drei'
import { useBox, useConvexPolyhedron } from '@react-three/cannon'

export default function Pillar(props) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/pillar.glb')

  const geo = useMemo(() => new THREE.BufferGeometry(nodes.dungoen_pillar_pillar_mat_0.geometry), [nodes])


  console.log(nodes.dungoen_pillar_pillar_mat_0.geometry)
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.01}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh geometry={nodes.dungoen_pillar_pillar_mat_0.geometry} material={materials.pillar_mat} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/pillar.glb')
